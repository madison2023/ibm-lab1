{"ast":null,"code":"var _jsxFileName = \"/Users/rachelmadison/lab-1-team-37/src/component/MainBox.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { green } from \"@material-ui/core/colors\";\nimport Box from \"@material-ui/core/Box\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { pink, cyan } from \"@material-ui/core/colors\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React, { useState, useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Icon from \"@material-ui/core/Icon\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport BasicTextField from \"./BasicTextField\";\nimport { Chip } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport LocalLaundryServiceIcon from \"@material-ui/icons/LocalLaundryService\";\nimport { CategoryColors } from \"../style/colors\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport { InputLabel } from \"@material-ui/core\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport { FormControl } from \"@material-ui/core\";\nimport { Select } from \"@material-ui/core\"; // Returns appropriate icon based on list item category\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getCategoryIcon(value) {\n  if (value.category === \"chores\") {\n    return /*#__PURE__*/_jsxDEV(LocalLaundryServiceIcon, {\n      style: {\n        color: CategoryColors[\"chores\"]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  } else if (value.category === \"school\") {\n    return /*#__PURE__*/_jsxDEV(SchoolIcon, {\n      style: {\n        color: CategoryColors[\"school\"]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  } else if (value.category === \"self-care\") {\n    return /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n      style: {\n        color: CategoryColors[\"self-care\"]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  } else if (value.category === \"social\") {\n    return /*#__PURE__*/_jsxDEV(GroupIcon, {\n      style: {\n        color: CategoryColors[\"social\"]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  } else if (value.category === \"work\") {\n    return /*#__PURE__*/_jsxDEV(WorkIcon, {\n      style: {\n        color: CategoryColors[\"work\"]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  } else {\n    // other\n    return /*#__PURE__*/_jsxDEV(HelpIcon, {\n      style: {\n        color: CategoryColors[\"other\"]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n} // This overrides the default MUI theme colors\n\n\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: cyan[500]\n    },\n    secondary: {\n      main: pink[500]\n    }\n  }\n}); // STYLING\n\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    color: theme.palette.secondary\n  },\n  root: {\n    backgroundColor: \"transparent\",\n    width: \"100%\",\n    position: \"relative\",\n    height: \"100%\"\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[600]\n    }\n  }\n}));\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `action-tabpanel-${index}`,\n    \"aria-labelledby\": `action-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    \"aria-controls\": `action-tabpanel-${index}`\n  };\n}\n\nexport default function MainBox(props) {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme(); // STATE\n\n  const [value, setValue] = useState(0);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [editId, setEditId] = useState(0); // Upon re-render, check if it is necessary to scroll to last list entry\n\n  useEffect(() => {\n    if (props.addedNewEntry === true) scrollToLastEntry();\n  }); // State was not used for this to prevent re-rendering when user edits text\n\n  var editCategory = \"\";\n  var editTitle = \"\";\n\n  const dialogHandleOpen = () => {\n    editCategory = \"\";\n    editTitle = \"\";\n    setDialogOpen(true);\n  };\n\n  const dialogHandleClose = () => {\n    setDialogOpen(false);\n  };\n\n  var allEntries = props.listOfEntries; // We receive the list of all to-do list entries from MainGrid.js\n\n  const scrollToLastEntry = () => {\n    var element = document.getElementById(\"lastEntry\");\n    if (element === undefined) return;\n    element.scrollIntoView();\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n  };\n\n  const formatDate = date => {\n    let period = \"AM\";\n    let hour = date.getHours();\n\n    if (hour === 12) {\n      period = \"PM\";\n    } else if (hour > 12) {\n      hour = hour - 12;\n      period = \"PM\";\n    }\n\n    let month = date.getMonth() + 1;\n    let dayOfMonth = date.getDate();\n    let minute = date.getMinutes();\n\n    if (minute < 10) {\n      minute = \"0\" + minute;\n    }\n\n    return month + \"/\" + dayOfMonth + \"/\" + date.getYear().toString().substring(1) + \" \" + hour + \":\" + minute + \" \" + period;\n  }; // Allows the user to modify the title and/or the category of a to-do list item\n\n\n  const DialogPopup = () => {\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: dialogHandleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Edit List Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: [\"Enter the fields you'd like to change. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 52\n          }, this), \"The fields left blank will remain as is.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"normal\",\n          id: \"edit-title\",\n          label: \"Task Name\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              width: \"10rem\"\n            },\n            inputProps: {\n              id: \"edit-category\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"chores\",\n              children: \"Chores\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"school\",\n              children: \"School\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"self-care\",\n              children: \"Self-care\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"social\",\n              children: \"Social\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"work\",\n              children: \"Work\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: dialogHandleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            editCategory = document.getElementById(\"edit-category\").value;\n            editTitle = document.getElementById(\"edit-title\").value;\n            if (editCategory === undefined) editCategory = \"\";\n            if (editTitle === undefined) editTitle = \"\"; // Only attempt to update state if user modified any fields\n\n            if (editCategory !== \"\" || editTitle !== \"\") {\n              props.remotelyHandleEdit({\n                title: editTitle,\n                category: editCategory,\n                id: editId\n              });\n            }\n\n            dialogHandleClose();\n          },\n          color: \"secondary\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  };\n\n  const RenderListComponents = () => {\n    var entryCount = 0;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        MenuProps: {\n          autoFocus: false\n        },\n        dense: true,\n        className: classes.root,\n        style: {\n          width: \"100%\",\n          maxHeight: \"36rem\",\n          overflowY: \"auto\"\n        },\n        children: allEntries.map(value => {\n          const labelId = `checkbox-list-secondary-label-${value.id}`;\n          let isLast = false;\n          entryCount += 1;\n\n          if (entryCount === allEntries.length) {\n            isLast = true;\n          } // What appears in each list entry:\n\n\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            id: isLast === true ? \"lastEntry\" : \"entry\" + entryCount,\n            className: classes.listItem,\n            disabled: false,\n            style: {\n              width: \"100%\",\n              height: \"5rem\",\n              // Opacity changes when the item is marked as complete.\n              opacity: value.done === false ? 1 : 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"delete\",\n              color: \"primary\",\n              onClick: () => {\n                props.remotelyHandleDelete(value.id);\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                children: getCategoryIcon(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: formatDate(value.date),\n              color: \"secondary\",\n              style: {\n                marginRight: \"1rem\",\n                width: \"auto\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              id: labelId,\n              primary: value.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"edit\",\n              color: \"primary\",\n              onClick: () => {\n                setEditId(value.id);\n                dialogHandleOpen();\n              },\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                edge: \"end\",\n                onChange: props.remotelyHandleToggle(value),\n                checked: value.done !== false,\n                inputProps: {\n                  \"aria-labelledby\": labelId\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this)]\n          }, value.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this); // End of list entry display ^\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: customTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        style: {\n          background: \"white\"\n        },\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: handleChange,\n          indicatorColor: \"secondary\",\n          textColor: \"primary\",\n          variant: \"fullWidth\",\n          \"aria-label\": \"action tabs example\",\n          children: /*#__PURE__*/_jsxDEV(Tab, {\n            style: {\n              backgroundColor: \"#264653\",\n              fontWeight: \"bold\",\n              fontSize: \"3rem\"\n            },\n            label: \"TO-DO LIST\",\n            ...a11yProps(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwipeableViews, {\n        axis: theme.direction === \"rtl\" ? \"x-reverse\" : \"x\",\n        index: value,\n        onChangeIndex: handleChangeIndex,\n        children: /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: value,\n          index: 0,\n          dir: theme.direction,\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            style: {\n              width: \"100%\",\n              margin: 0,\n              padding: 0\n            },\n            children: RenderListComponents()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 5,\n            style: {\n              marginTop: \"1rem\",\n              alignContent: \"left\",\n              justifyContent: \"left\",\n              width: \"100%\",\n              marginLeft: \"0rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(BasicTextField, {\n              listOfEntries: props.listOfEntries,\n              remotelyHandleAdd: props.remotelyHandleAdd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogPopup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainBox, \"Ri/wKnHqYIX6GXSZCCYDVQLYbQY=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c2 = MainBox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"MainBox\");","map":{"version":3,"sources":["/Users/rachelmadison/lab-1-team-37/src/component/MainBox.js"],"names":["PropTypes","SwipeableViews","makeStyles","useTheme","AppBar","Tabs","Tab","Typography","EditIcon","green","Box","createMuiTheme","ThemeProvider","pink","cyan","Paper","React","useState","useEffect","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","Icon","ListItemIcon","BasicTextField","Chip","IconButton","Button","DeleteIcon","FavoriteIcon","GroupIcon","SchoolIcon","WorkIcon","LocalLaundryServiceIcon","CategoryColors","HelpIcon","InputLabel","MenuItem","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","TextField","FormControl","Select","getCategoryIcon","value","category","color","customTheme","palette","primary","main","secondary","useStyles","theme","listItem","root","backgroundColor","width","position","height","fab","bottom","spacing","right","fabGreen","common","white","TabPanel","props","children","index","other","propTypes","node","any","isRequired","a11yProps","id","MainBox","classes","setValue","dialogOpen","setDialogOpen","editId","setEditId","addedNewEntry","scrollToLastEntry","editCategory","editTitle","dialogHandleOpen","dialogHandleClose","allEntries","listOfEntries","element","document","getElementById","undefined","scrollIntoView","handleChange","event","newValue","handleChangeIndex","formatDate","date","period","hour","getHours","month","getMonth","dayOfMonth","getDate","minute","getMinutes","getYear","toString","substring","DialogPopup","remotelyHandleEdit","title","RenderListComponents","entryCount","autoFocus","maxHeight","overflowY","map","labelId","isLast","length","opacity","done","remotelyHandleDelete","marginRight","remotelyHandleToggle","background","fontWeight","fontSize","direction","margin","padding","marginTop","alignContent","justifyContent","marginLeft","remotelyHandleAdd"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { green } from \"@material-ui/core/colors\";\nimport Box from \"@material-ui/core/Box\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { pink, cyan } from \"@material-ui/core/colors\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React, { useState, useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Icon from \"@material-ui/core/Icon\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport BasicTextField from \"./BasicTextField\";\nimport { Chip } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport LocalLaundryServiceIcon from \"@material-ui/icons/LocalLaundryService\";\nimport { CategoryColors } from \"../style/colors\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport { InputLabel } from \"@material-ui/core\";\nimport { MenuItem } from \"@material-ui/core\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport { FormControl } from \"@material-ui/core\";\nimport { Select } from \"@material-ui/core\";\n\n// Returns appropriate icon based on list item category\nfunction getCategoryIcon(value) {\n  if (value.category === \"chores\") {\n    return (\n      <LocalLaundryServiceIcon style={{ color: CategoryColors[\"chores\"] }} />\n    );\n  } else if (value.category === \"school\") {\n    return <SchoolIcon style={{ color: CategoryColors[\"school\"] }} />;\n  } else if (value.category === \"self-care\") {\n    return <FavoriteIcon style={{ color: CategoryColors[\"self-care\"] }} />;\n  } else if (value.category === \"social\") {\n    return <GroupIcon style={{ color: CategoryColors[\"social\"] }} />;\n  } else if (value.category === \"work\") {\n    return <WorkIcon style={{ color: CategoryColors[\"work\"] }} />;\n  } else {\n    // other\n    return <HelpIcon style={{ color: CategoryColors[\"other\"] }} />;\n  }\n}\n\n// This overrides the default MUI theme colors\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: cyan[500],\n    },\n    secondary: {\n      main: pink[500],\n    },\n  },\n});\n\n// STYLING\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    color: theme.palette.secondary,\n  },\n  root: {\n    backgroundColor: \"transparent\",\n    width: \"100%\",\n    position: \"relative\",\n    height: \"100%\",\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[600],\n    },\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`action-tabpanel-${index}`}\n      aria-labelledby={`action-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    \"aria-controls\": `action-tabpanel-${index}`,\n  };\n}\n\nexport default function MainBox(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // STATE\n  const [value, setValue] = useState(0);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [editId, setEditId] = useState(0);\n\n  // Upon re-render, check if it is necessary to scroll to last list entry\n  useEffect(() => {\n    if (props.addedNewEntry === true) scrollToLastEntry();\n  });\n\n  // State was not used for this to prevent re-rendering when user edits text\n  var editCategory = \"\";\n  var editTitle = \"\";\n\n  const dialogHandleOpen = () => {\n    editCategory = \"\";\n    editTitle = \"\";\n    setDialogOpen(true);\n  };\n  const dialogHandleClose = () => {\n    setDialogOpen(false);\n  };\n\n  var allEntries = props.listOfEntries; // We receive the list of all to-do list entries from MainGrid.js\n\n  const scrollToLastEntry = () => {\n    var element = document.getElementById(\"lastEntry\");\n    if (element === undefined) return;\n    element.scrollIntoView();\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  const formatDate = (date) => {\n    let period = \"AM\";\n    let hour = date.getHours();\n    if (hour === 12) {\n      period = \"PM\";\n    } else if (hour > 12) {\n      hour = hour - 12;\n      period = \"PM\";\n    }\n\n    let month = date.getMonth() + 1;\n    let dayOfMonth = date.getDate();\n\n    let minute = date.getMinutes();\n    if (minute < 10) {\n      minute = \"0\" + minute;\n    }\n\n    return (\n      month +\n      \"/\" +\n      dayOfMonth +\n      \"/\" +\n      date.getYear().toString().substring(1) +\n      \" \" +\n      hour +\n      \":\" +\n      minute +\n      \" \" +\n      period\n    );\n  };\n\n  // Allows the user to modify the title and/or the category of a to-do list item\n  const DialogPopup = () => {\n    return (\n      <Dialog\n        open={dialogOpen}\n        onClose={dialogHandleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Edit List Entry</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter the fields you'd like to change. <br />\n            The fields left blank will remain as is.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"normal\"\n            id=\"edit-title\"\n            label=\"Task Name\"\n            fullWidth\n          />\n          {/* Same category selection as inside `BasicTextField` */}\n          <FormControl>\n            <InputLabel>Category</InputLabel>\n            <Select\n              style={{ width: \"10rem\" }}\n              inputProps={{ id: \"edit-category\" }}\n            >\n              <MenuItem value={\"chores\"}>Chores</MenuItem>\n              <MenuItem value={\"school\"}>School</MenuItem>\n              <MenuItem value={\"self-care\"}>Self-care</MenuItem>\n              <MenuItem value={\"social\"}>Social</MenuItem>\n              <MenuItem value={\"work\"}>Work</MenuItem>\n              <MenuItem value={\"other\"}>Other</MenuItem>\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={dialogHandleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              editCategory = document.getElementById(\"edit-category\").value;\n              editTitle = document.getElementById(\"edit-title\").value;\n\n              if (editCategory === undefined) editCategory = \"\";\n              if (editTitle === undefined) editTitle = \"\";\n\n              // Only attempt to update state if user modified any fields\n              if (editCategory !== \"\" || editTitle !== \"\") {\n                props.remotelyHandleEdit({\n                  title: editTitle,\n                  category: editCategory,\n                  id: editId,\n                });\n              }\n              dialogHandleClose();\n            }}\n            color=\"secondary\"\n          >\n            Save Changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n\n  const RenderListComponents = () => {\n    var entryCount = 0;\n\n    return (\n      <Paper>\n        <List\n          MenuProps={{ autoFocus: false }}\n          dense\n          className={classes.root}\n          style={{ width: \"100%\", maxHeight: \"36rem\", overflowY: \"auto\" }}\n        >\n          {allEntries.map((value) => {\n            const labelId = `checkbox-list-secondary-label-${value.id}`;\n            let isLast = false;\n            entryCount += 1;\n            if (entryCount === allEntries.length) {\n              isLast = true;\n            }\n            // What appears in each list entry:\n            return (\n              <ListItem\n                id={isLast === true ? \"lastEntry\" : \"entry\" + entryCount}\n                className={classes.listItem}\n                key={value.id}\n                disabled={false}\n                style={{\n                  width: \"100%\",\n                  height: \"5rem\",\n                  // Opacity changes when the item is marked as complete.\n                  opacity: value.done === false ? 1 : 0.5,\n                }}\n              >\n                <IconButton\n                  aria-label=\"delete\"\n                  color=\"primary\"\n                  onClick={() => {\n                    props.remotelyHandleDelete(value.id);\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n\n                {/* Displays an avatar. Maybe we can replace this with an icon later,\n                depending on what they categorize the task as? */}\n                <ListItemIcon>\n                  <Icon>{getCategoryIcon(value)}</Icon>\n                </ListItemIcon>\n\n                {/* This would be a great place to display the date and time of list entry creation. \n                It may be referenced `value.creationTime` after implementation. */}\n                <Chip\n                  label={formatDate(value.date)}\n                  color=\"secondary\"\n                  style={{\n                    marginRight: \"1rem\",\n                    width: \"auto\",\n                  }}\n                />\n\n                {/* Displays name (title) of task. */}\n                <ListItemText id={labelId} primary={value.title} />\n\n                <IconButton\n                  aria-label=\"edit\"\n                  color=\"primary\"\n                  onClick={() => {\n                    setEditId(value.id);\n                    dialogHandleOpen();\n                  }}\n                >\n                  <EditIcon />\n                </IconButton>\n\n                {/* Checkbox components; shows task status. */}\n                <ListItemSecondaryAction>\n                  <Checkbox\n                    edge=\"end\"\n                    onChange={props.remotelyHandleToggle(value)}\n                    checked={value.done !== false}\n                    inputProps={{ \"aria-labelledby\": labelId }}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n            // End of list entry display ^\n          })}\n        </List>\n      </Paper>\n    );\n  };\n\n  return (\n    <ThemeProvider theme={customTheme}>\n      <div className={classes.root}>\n        <AppBar style={{ background: \"white\" }} position=\"static\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"secondary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"action tabs example\"\n          >\n            <Tab\n              style={{\n                backgroundColor: \"#264653\",\n                fontWeight: \"bold\",\n                fontSize: \"3rem\",\n              }}\n              label=\"TO-DO LIST\"\n              {...a11yProps(0)}\n            ></Tab>\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n          index={value}\n          onChangeIndex={handleChangeIndex}\n        >\n          <TabPanel\n            value={value}\n            index={0}\n            dir={theme.direction}\n            style={{ width: \"100%\" }}\n          >\n            {/* Contents of tab 1. */}\n            <Paper\n              style={{\n                width: \"100%\",\n                margin: 0,\n                padding: 0,\n              }}\n            >\n              {RenderListComponents()}\n            </Paper>\n            <Paper\n              elevation={5}\n              style={{\n                marginTop: \"1rem\",\n                alignContent: \"left\",\n                justifyContent: \"left\",\n                width: \"100%\",\n                marginLeft: \"0rem\",\n              }}\n            >\n              <BasicTextField\n                listOfEntries={props.listOfEntries}\n                remotelyHandleAdd={props.remotelyHandleAdd}\n              />\n            </Paper>\n            <DialogPopup />\n          </TabPanel>\n        </SwipeableViews>\n      </div>\n    </ThemeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}