{"ast":null,"code":"var _jsxFileName = \"/Users/rachelmadison/lab-1-team-37/src/component/TabPanel.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport UpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport { green, red } from \"@material-ui/core/colors\";\nimport Box from \"@material-ui/core/Box\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { indigo, orange, pink, cyan } from \"@material-ui/core/colors\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { fontWeight } from \"@material-ui/system\";\nimport React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Icon from '@material-ui/core/Icon';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport BasicTextField from \"./BasicTextField\";\nimport { Chip } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport GroupIcon from '@material-ui/icons/Group';\nimport SchoolIcon from '@material-ui/icons/School';\nimport WorkIcon from '@material-ui/icons/Work';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categoryColors = {\n  chores: '#540d6e',\n  other: '#5967ff',\n  school: '#3bceac',\n  'self-care': '#ee4266',\n  social: '#ffd23f',\n  work: '#403d39'\n};\n\nfunction getCategoryIcon(value) {\n  if (value.category === \"chores\") {\n    return /*#__PURE__*/_jsxDEV(DoneIcon, {\n      style: {\n        color: categoryColors['chores']\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  } else if (value.category === \"school\") {\n    return /*#__PURE__*/_jsxDEV(SchoolIcon, {\n      style: {\n        color: categoryColors['school']\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  } else if (value.category === \"self-care\") {\n    return /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n      style: {\n        color: categoryColors['self-care']\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  } else if (value.category === \"social\") {\n    return /*#__PURE__*/_jsxDEV(GroupIcon, {\n      style: {\n        color: categoryColors['social']\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  } else if (value.category === \"work\") {\n    return /*#__PURE__*/_jsxDEV(WorkIcon, {\n      style: {\n        color: categoryColors['work']\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  } else {\n    // other\n    return /*#__PURE__*/_jsxDEV(EmojiEmotionsIcon, {\n      style: {\n        color: categoryColors['other']\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n} // Each new instantiated Task increments curId by one:\n\n\nlet curId = 0;\n\nclass Task {\n  /**\n   * Creates a Task object given the name of the task (any string) and the name\n   * of its category (strings from a predetermined set: \"work\", \"school\",\"chores\",\n   * \"self-care\", \"social\", and \"other\").\n   * \n   * @param {string} title the name of the task that appears in the list\n   * @param {string} category the name of the task category\n   */\n  constructor(title = \"Do homework\", category) {\n    this.title = title;\n    this.category = category;\n    this.id = curId;\n    curId = curId + 1;\n    this.done = false; // optional: this.date = new Date() if anyone wants encapsulation of the date\n  }\n\n} // This overrides the default MUI theme colors.\n\n\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: cyan[500]\n    },\n    secondary: {\n      main: pink[500]\n    }\n  }\n}); // STYLING\n\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    color: theme.palette.secondary\n  },\n  root: {\n    backgroundColor: \"transparent\",\n    width: \"100%\",\n    position: \"relative\",\n    height: \"100%\"\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[600]\n    }\n  }\n}));\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `action-tabpanel-${index}`,\n    \"aria-labelledby\": `action-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    \"aria-controls\": `action-tabpanel-${index}`\n  };\n}\n\nexport default function FloatingActionButtonZoom(props) {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme(); // STATE\n\n  const [value, setValue] = React.useState(0);\n  var allEntries = props.listOfEntries; // We receive the list of all to-do list entries from MainGrid.js. Props are useful!\n  // FUNCTIONS (no need to edit these ones in particular)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n  };\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  }; // FAB stands for Floating Action Buttton. This is how they are currently styled.\n  // Notice we only see the `Add` fab. The others can be made visible\n  // by uncommenting some parts below.\n\n  const fabs = [{\n    color: \"primary\",\n    className: classes.fab,\n    icon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this),\n    label: \"Add\"\n  }, {\n    color: \"secondary\",\n    className: classes.fab,\n    icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this),\n    label: \"Edit\"\n  }, {\n    color: \"inherit\",\n    className: clsx(classes.fab, classes.fabGreen),\n    icon: /*#__PURE__*/_jsxDEV(UpIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this),\n    label: \"Expand\"\n  }];\n\n  const CheckboxListSecondary = () => {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        width: \"100%\",\n        maxHeight: \"25rem\",\n        overflow: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        className: classes.root,\n        children: allEntries.map(value => {\n          const labelId = `checkbox-list-secondary-label-${value.id}`; // This dictates what appears in each list entry!\n\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            className: classes.listItem,\n            disabled: false,\n            style: {\n              width: \"100%\",\n              height: \"5rem\",\n              // Opacity changes when the item is marked as complete.\n              opacity: value.done === false ? 1 : 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"delete\",\n              color: \"primary\",\n              onClick: () => {\n                // ***For Lauren***\n                // It should be fairly convenient to use `value` and `allEntries`\n                // You will need to make a DeleteEntry function though inside MainGrid.js,\n                // pass it down as a prop, and call it here! Feel free to edit the style of the icon button, etc.\n                alert(\"Ability to delete is not yet functional\");\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                children: getCategoryIcon(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"6/17/21 1:29 AM\",\n              color: \"secondary\",\n              style: {\n                marginRight: \"1rem\",\n                width: \"auto\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              id: labelId,\n              primary: value.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"edit\",\n              color: \"primary\",\n              onClick: () => {\n                // ***For Rachel***\n                // It should be fairly convenient to use `value` and `allEntries`\n                // You will need to make an EditEntry function though inside MainGrid.js,\n                // pass it down as a prop, and call it here! Feel free to edit the style of the icon button, etc.\n                alert(\"Ability to edit is not yet functional\");\n              },\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                edge: \"end\",\n                onChange: props.remotelyHandleToggle(value),\n                checked: value.done !== false,\n                inputProps: {\n                  \"aria-labelledby\": labelId\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, value.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this); // End of list entry display ^\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: customTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        style: {\n          background: \"white\"\n        },\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: handleChange,\n          indicatorColor: \"secondary\",\n          textColor: \"primary\",\n          variant: \"fullWidth\",\n          \"aria-label\": \"action tabs example\",\n          children: /*#__PURE__*/_jsxDEV(Tab, {\n            style: {\n              backgroundColor: \"#264653\",\n              fontWeight: \"bold\",\n              fontSize: \"3rem\"\n            },\n            label: \"NOW\",\n            ...a11yProps(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwipeableViews, {\n        axis: theme.direction === \"rtl\" ? \"x-reverse\" : \"x\",\n        index: value,\n        onChangeIndex: handleChangeIndex,\n        children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n          value: value,\n          index: 0,\n          dir: theme.direction,\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            style: {\n              // backgroundColor: \"red\",\n              width: \"100%\",\n              margin: 0,\n              padding: 0\n            },\n            children: CheckboxListSecondary()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 5,\n            style: {\n              marginTop: \"1rem\",\n              alignContent: \"left\",\n              justifyContent: \"left\",\n              width: \"100%\",\n              marginLeft: \"0rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(BasicTextField, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: value,\n          index: 1,\n          dir: theme.direction,\n          children: \"Item Two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: value,\n          index: 2,\n          dir: theme.direction,\n          children: \"Item Three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FloatingActionButtonZoom, \"XiKagzVFXgRowwwDg+e/VhBURoA=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c2 = FloatingActionButtonZoom;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"FloatingActionButtonZoom\");","map":{"version":3,"sources":["/Users/rachelmadison/lab-1-team-37/src/component/TabPanel.js"],"names":["PropTypes","clsx","SwipeableViews","makeStyles","useTheme","AppBar","Tabs","Tab","Typography","Zoom","Fab","AddIcon","EditIcon","UpIcon","green","red","Box","createMuiTheme","ThemeProvider","indigo","orange","pink","cyan","Paper","fontWeight","React","useState","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","Icon","ListItemIcon","BasicTextField","Chip","IconButton","Button","DeleteIcon","DoneIcon","EmojiEmotionsIcon","FavoriteIcon","GroupIcon","SchoolIcon","WorkIcon","categoryColors","chores","other","school","social","work","getCategoryIcon","value","category","color","curId","Task","constructor","title","id","done","customTheme","palette","primary","main","secondary","useStyles","theme","listItem","root","backgroundColor","width","position","height","fab","bottom","spacing","right","fabGreen","common","white","TabPanel","props","children","index","propTypes","node","any","isRequired","a11yProps","FloatingActionButtonZoom","classes","setValue","allEntries","listOfEntries","handleChange","event","newValue","handleChangeIndex","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","fabs","className","icon","label","CheckboxListSecondary","maxHeight","overflow","map","labelId","opacity","alert","marginRight","remotelyHandleToggle","background","fontSize","direction","margin","padding","marginTop","alignContent","justifyContent","marginLeft"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport UpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport { green, red } from \"@material-ui/core/colors\";\nimport Box from \"@material-ui/core/Box\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { indigo, orange, pink, cyan } from \"@material-ui/core/colors\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { fontWeight } from \"@material-ui/system\";\nimport React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Icon from '@material-ui/core/Icon';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport BasicTextField from \"./BasicTextField\";\nimport { Chip } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport GroupIcon from '@material-ui/icons/Group';\nimport SchoolIcon from '@material-ui/icons/School';\nimport WorkIcon from '@material-ui/icons/Work';\n\nconst categoryColors = {\n  chores: '#540d6e',\n  other: '#5967ff',\n  school: '#3bceac',\n  'self-care': '#ee4266',\n  social: '#ffd23f',\n  work: '#403d39'\n}\n\nfunction getCategoryIcon(value) {\n  if (value.category === \"chores\") {\n    return <DoneIcon style={{ color: categoryColors['chores'] }} />\n  } else if (value.category === \"school\") {\n    return <SchoolIcon style={{ color: categoryColors['school'] }} />\n  } else if (value.category === \"self-care\") {\n    return <FavoriteIcon style={{ color: categoryColors['self-care'] }} />\n  } else if (value.category === \"social\") {\n    return <GroupIcon style={{ color: categoryColors['social'] }} />\n  } else if (value.category === \"work\") {\n    return <WorkIcon style={{ color: categoryColors['work'] }} />\n  } else { // other\n    return <EmojiEmotionsIcon style={{ color: categoryColors['other'] }} />\n  }\n}\n\n// Each new instantiated Task increments curId by one:\nlet curId = 0;\nclass Task {\n  /**\n   * Creates a Task object given the name of the task (any string) and the name\n   * of its category (strings from a predetermined set: \"work\", \"school\",\"chores\",\n   * \"self-care\", \"social\", and \"other\").\n   * \n   * @param {string} title the name of the task that appears in the list\n   * @param {string} category the name of the task category\n   */\n constructor(title=\"Do homework\", category) {\n    this.title = title;\n    this.category = category;\n    this.id = curId;\n    curId = curId + 1;\n    this.done = false;\n    // optional: this.date = new Date() if anyone wants encapsulation of the date\n  }\n}\n\n// This overrides the default MUI theme colors.\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: cyan[500],\n    },\n    secondary: {\n      main: pink[500],\n    },\n  },\n});\n\n// STYLING\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    color: theme.palette.secondary,\n  },\n  root: {\n    backgroundColor: \"transparent\",\n    width: \"100%\",\n    position: \"relative\",\n    height: \"100%\",\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[600],\n    },\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`action-tabpanel-${index}`}\n      aria-labelledby={`action-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    \"aria-controls\": `action-tabpanel-${index}`,\n  };\n}\n\nexport default function FloatingActionButtonZoom(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // STATE\n  const [value, setValue] = React.useState(0);\n  var allEntries = props.listOfEntries; // We receive the list of all to-do list entries from MainGrid.js. Props are useful!\n\n  // FUNCTIONS (no need to edit these ones in particular)\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\n  // FAB stands for Floating Action Buttton. This is how they are currently styled.\n  // Notice we only see the `Add` fab. The others can be made visible\n  // by uncommenting some parts below.\n  const fabs = [\n    {\n      color: \"primary\",\n      className: classes.fab,\n      icon: <AddIcon />,\n      label: \"Add\",\n    },\n    {\n      color: \"secondary\",\n      className: classes.fab,\n      icon: <EditIcon />,\n      label: \"Edit\",\n    },\n    {\n      color: \"inherit\",\n      className: clsx(classes.fab, classes.fabGreen),\n      icon: <UpIcon />,\n      label: \"Expand\",\n    },\n  ];\n\n  const CheckboxListSecondary = () => {\n    return (\n      <Paper style={{ width: \"100%\", maxHeight: \"25rem\", overflow: \"auto\" }}>\n        <List dense className={classes.root}>\n          {allEntries.map((value) => {\n            const labelId = `checkbox-list-secondary-label-${value.id}`;\n\n            // This dictates what appears in each list entry!\n            return (\n              <ListItem\n                className={classes.listItem}\n                key={value.id}\n                disabled={false}\n                style={{\n                  width: \"100%\",\n                  height: \"5rem\",\n                  // Opacity changes when the item is marked as complete.\n                  opacity: value.done === false ? 1 : 0.5,\n                }}\n              >\n                <IconButton\n                  aria-label=\"delete\"\n                  color=\"primary\"\n                  onClick={() => {\n                    // ***For Lauren***\n                    // It should be fairly convenient to use `value` and `allEntries`\n                    // You will need to make a DeleteEntry function though inside MainGrid.js,\n                    // pass it down as a prop, and call it here! Feel free to edit the style of the icon button, etc.\n                    alert(\"Ability to delete is not yet functional\");\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n\n                {/* Displays an avatar. Maybe we can replace this with an icon later,\n                depending on what they categorize the task as? */}\n                <ListItemIcon>\n                  <Icon>\n                    {getCategoryIcon(value)}\n                  </Icon>\n                </ListItemIcon>\n\n                {/* This would be a great place to display the date and time of list entry creation. \n                It may be referenced `value.creationTime` after implementation. */}\n                <Chip\n                  label=\"6/17/21 1:29 AM\"\n                  color=\"secondary\"\n                  style={{ marginRight: \"1rem\", width: \"auto\" }}\n                />\n\n                {/* Displays name (title) of task. */}\n                <ListItemText id={labelId} primary={value.title} />\n\n                <IconButton\n                  aria-label=\"edit\"\n                  color=\"primary\"\n                  onClick={() => {\n                    // ***For Rachel***\n                    // It should be fairly convenient to use `value` and `allEntries`\n                    // You will need to make an EditEntry function though inside MainGrid.js,\n                    // pass it down as a prop, and call it here! Feel free to edit the style of the icon button, etc.\n                    alert(\"Ability to edit is not yet functional\");\n                  }}\n                >\n                  <EditIcon />\n                </IconButton>\n\n                {/* Checkbox components; shows task status. */}\n                <ListItemSecondaryAction>\n                  <Checkbox\n                    edge=\"end\"\n                    onChange={props.remotelyHandleToggle(value)}\n                    checked={value.done !== false}\n                    inputProps={{ \"aria-labelledby\": labelId }}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n            // End of list entry display ^\n          })}\n        </List>\n      </Paper>\n    );\n  };\n\n  return (\n    <ThemeProvider theme={customTheme}>\n      <div className={classes.root}>\n        <AppBar style={{ background: \"white\" }} position=\"static\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"secondary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"action tabs example\"\n          >\n            <Tab\n              style={{\n                backgroundColor: \"#264653\",\n                fontWeight: \"bold\",\n                fontSize: \"3rem\",\n              }}\n              label=\"NOW\"\n              {...a11yProps(0)}\n            ></Tab>\n\n            {/* So these allow there to be multiple tabs in this grid box.\n            Try uncommenting below. It's pretty cool! 😎 As it adds more complexity,\n            we probably shouldn't worry about doing anything with it right now. */}\n\n            {/* <Tab\n              style={{\n                backgroundColor: \"#264653\",\n                fontWeight: \"bold\",\n                fontSize: \"3rem\",\n              }}\n              label=\"SOON\"\n              {...a11yProps(1)}\n            />\n            <Tab\n              style={{\n                backgroundColor: \"#264653\",\n                fontWeight: \"bold\",\n                fontSize: \"3rem\",\n              }}\n              label=\"LATER\"\n              {...a11yProps(2)}\n            /> */}\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n          index={value}\n          onChangeIndex={handleChangeIndex}\n        >\n          <TabPanel\n            value={value}\n            index={0}\n            dir={theme.direction}\n            style={{ width: \"100%\" }}\n          >\n            {/* Contents of tab 1. */}\n            <Paper\n              style={{\n                // backgroundColor: \"red\",\n                width: \"100%\",\n                margin: 0,\n                padding: 0,\n              }}\n            >\n              {CheckboxListSecondary()}\n            </Paper>\n            <Paper\n              elevation={5}\n              style={{\n                marginTop: \"1rem\",\n                alignContent: \"left\",\n                justifyContent: \"left\",\n                width: \"100%\",\n                marginLeft: \"0rem\",\n              }}\n            >\n              <BasicTextField />\n            </Paper>\n          </TabPanel>\n          <TabPanel value={value} index={1} dir={theme.direction}>\n            {/* Contents of tab 2. */}\n            Item Two\n          </TabPanel>\n          <TabPanel value={value} index={2} dir={theme.direction}>\n            {/* Contents of tab 3. */}\n            Item Three\n          </TabPanel>\n        </SwipeableViews>\n      </div>\n    </ThemeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}