{"ast":null,"code":"var _jsxFileName = \"/Users/rachelmadison/lab-1-team-37/src/component/TabPanel.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport UpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport { green } from \"@material-ui/core/colors\";\nimport Box from \"@material-ui/core/Box\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { indigo, orange, pink, cyan } from \"@material-ui/core/colors\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { fontWeight } from \"@material-ui/system\";\nimport React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport BasicTextFields from \"./BasicTextField\";\nimport { Chip } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport FormDialog from \"./FormDialog\"; // This overrides the default MUI theme colors.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: cyan[500]\n    },\n    secondary: {\n      main: pink[500]\n    }\n  }\n}); // STYLING\n\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    color: theme.palette.secondary\n  },\n  root: {\n    backgroundColor: \"transparent\",\n    width: \"100%\",\n    position: \"relative\",\n    height: \"100%\"\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[600]\n    }\n  }\n}));\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `action-tabpanel-${index}`,\n    \"aria-labelledby\": `action-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    \"aria-controls\": `action-tabpanel-${index}`\n  };\n}\n\nexport default function FloatingActionButtonZoom() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme(); // STATE\n\n  const [value, setValue] = React.useState(0);\n  const [checked, setChecked] = React.useState([]);\n  const [allEntries, setAllEntries] = useState([{\n    id: 0,\n    title: \"Do homework\",\n    done: false\n  }, {\n    id: 1,\n    title: \"Eat dinner\",\n    done: false\n  }, {\n    id: 2,\n    title: \"Spend time with family\",\n    done: false\n  }]); // FUNCTIONS\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n  };\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  }; // FAB stands for Floating Action Buttton. This is how they are currently styled.\n  // Notice we only see the `Add` fab. The others can be made visible\n  // by uncommenting some parts below.\n\n  const fabs = [{\n    color: \"primary\",\n    className: classes.fab,\n    icon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this),\n    label: \"Add\"\n  }, {\n    color: \"secondary\",\n    className: classes.fab,\n    icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this),\n    label: \"Edit\"\n  }, {\n    color: \"inherit\",\n    className: clsx(classes.fab, classes.fabGreen),\n    icon: /*#__PURE__*/_jsxDEV(UpIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this),\n    label: \"Expand\"\n  }];\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    var newState = [];\n    allEntries.map(_value => {\n      if (_value.id === value.id) {\n        _value.done = !_value.done;\n      }\n\n      newState.push(_value);\n    });\n    setAllEntries(newState);\n  };\n\n  const CheckboxListSecondary = () => {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        width: \"100%\",\n        maxHeight: \"33rem\",\n        overflow: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        className: classes.root,\n        children: allEntries.map(value => {\n          const labelId = `checkbox-list-secondary-label-${value.id}`; // This dictates what appears in each list entry!\n\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            className: classes.listItem,\n            disabled: true,\n            style: {\n              width: \"100%\",\n              height: \"5rem\",\n              // Opacity changes when the item is marked as complete.\n              opacity: value.done === false ? 1 : 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: `Avatar nÂ°${value + 1}`,\n                src: `/static/images/avatar/${value + 1}.jpg`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"6/17/21 1:29 AM\",\n              color: \"secondary\",\n              style: {\n                marginRight: \"1rem\",\n                width: \"auto\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              id: labelId,\n              primary: value.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox //edge=\"end\"\n              , {\n                onChange: handleToggle(value),\n                checked: checked.indexOf(value) !== -1,\n                inputProps: {\n                  \"aria-labelledby\": labelId\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              children: [\" onClick=\", () => {\n                FormDialog.setOpen(true);\n              }, /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, value.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this); // End of list entry display ^\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: customTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        style: {\n          background: \"white\"\n        },\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: handleChange,\n          indicatorColor: \"secondary\",\n          textColor: \"primary\",\n          variant: \"fullWidth\",\n          \"aria-label\": \"action tabs example\",\n          children: /*#__PURE__*/_jsxDEV(Tab, {\n            style: {\n              backgroundColor: \"#264653\",\n              fontWeight: \"bold\",\n              fontSize: \"3rem\"\n            },\n            label: \"NOW\",\n            ...a11yProps(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwipeableViews, {\n        axis: theme.direction === \"rtl\" ? \"x-reverse\" : \"x\",\n        index: value,\n        onChangeIndex: handleChangeIndex,\n        children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n          value: value,\n          index: 0,\n          dir: theme.direction,\n          style: {\n            backgroundColor: \"#264653\",\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            style: {\n              backgroundColor: \"red\",\n              width: \"100%\",\n              margin: 0,\n              padding: 0\n            },\n            children: CheckboxListSecondary()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: value,\n          index: 1,\n          dir: theme.direction,\n          children: \"Item Two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: value,\n          index: 2,\n          dir: theme.direction,\n          children: \"Item Three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), fabs.map((fab, index) => /*#__PURE__*/_jsxDEV(Zoom, {\n        in: value === index,\n        timeout: transitionDuration,\n        style: {\n          transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`\n        },\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          \"aria-label\": fab.label,\n          className: fab.className,\n          color: fab.color,\n          onClick: () => {\n            // We should use this to implement adding new to-do entries!\n            console.log(\"onClick\");\n          },\n          children: fab.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this)\n      }, fab.color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FloatingActionButtonZoom, \"9t/DtlQOHbbhUF7PH2w7kw7VBls=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c2 = FloatingActionButtonZoom;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"FloatingActionButtonZoom\");","map":{"version":3,"sources":["/Users/rachelmadison/lab-1-team-37/src/component/TabPanel.js"],"names":["PropTypes","clsx","SwipeableViews","makeStyles","useTheme","AppBar","Tabs","Tab","Typography","Zoom","Fab","AddIcon","EditIcon","UpIcon","green","Box","createMuiTheme","ThemeProvider","indigo","orange","pink","cyan","Paper","fontWeight","React","useState","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","ListItemIcon","Checkbox","Avatar","BasicTextFields","Chip","Button","FormDialog","customTheme","palette","primary","main","secondary","useStyles","theme","listItem","color","root","backgroundColor","width","position","height","fab","bottom","spacing","right","fabGreen","common","white","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","FloatingActionButtonZoom","classes","setValue","checked","setChecked","allEntries","setAllEntries","title","done","handleChange","event","newValue","handleChangeIndex","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","fabs","className","icon","label","handleToggle","currentIndex","indexOf","newChecked","push","splice","newState","map","_value","CheckboxListSecondary","maxHeight","overflow","labelId","opacity","marginRight","setOpen","background","fontSize","direction","margin","padding","transitionDelay","console","log"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport UpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport { green } from \"@material-ui/core/colors\";\nimport Box from \"@material-ui/core/Box\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { indigo, orange, pink, cyan } from \"@material-ui/core/colors\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { fontWeight } from \"@material-ui/system\";\nimport React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport BasicTextFields from \"./BasicTextField\";\nimport { Chip } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\"\nimport FormDialog from \"./FormDialog\"\n\n// This overrides the default MUI theme colors.\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: cyan[500],\n    },\n    secondary: {\n      main: pink[500],\n    },\n  },\n});\n\n// STYLING\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    color: theme.palette.secondary,\n  },\n  root: {\n    backgroundColor: \"transparent\",\n    width: \"100%\",\n    position: \"relative\",\n    height: \"100%\",\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[600],\n    },\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`action-tabpanel-${index}`}\n      aria-labelledby={`action-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    \"aria-controls\": `action-tabpanel-${index}`,\n  };\n}\n\nexport default function FloatingActionButtonZoom() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // STATE\n  const [value, setValue] = React.useState(0);\n  const [checked, setChecked] = React.useState([]);\n  const [allEntries, setAllEntries] = useState([\n    { id: 0, title: \"Do homework\", done: false },\n    { id: 1, title: \"Eat dinner\", done: false },\n    { id: 2, title: \"Spend time with family\", done: false },\n  ]);\n\n  // FUNCTIONS\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\n  // FAB stands for Floating Action Buttton. This is how they are currently styled.\n  // Notice we only see the `Add` fab. The others can be made visible\n  // by uncommenting some parts below.\n  const fabs = [\n    {\n      color: \"primary\",\n      className: classes.fab,\n      icon: <AddIcon />,\n      label: \"Add\",\n    },\n    {\n      color: \"secondary\",\n      className: classes.fab,\n      icon: <EditIcon />,\n      label: \"Edit\",\n    },\n    {\n      color: \"inherit\",\n      className: clsx(classes.fab, classes.fabGreen),\n      icon: <UpIcon />,\n      label: \"Expand\",\n    },\n  ];\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n\n    var newState = [];\n    allEntries.map((_value) => {\n      if (_value.id === value.id) {\n        _value.done = !_value.done;\n      }\n      newState.push(_value);\n    });\n    setAllEntries(newState);\n  };\n\n  const CheckboxListSecondary = () => {\n    return (\n      <Paper style={{ width: \"100%\", maxHeight: \"33rem\", overflow: \"auto\" }}>\n        <List dense className={classes.root}>\n          {allEntries.map((value) => {\n            const labelId = `checkbox-list-secondary-label-${value.id}`;\n\n            // This dictates what appears in each list entry!\n            return (\n              <ListItem\n                className={classes.listItem}\n                key={value.id}\n                disabled={true}\n                style={{\n                  width: \"100%\",\n                  height: \"5rem\",\n                  // Opacity changes when the item is marked as complete.\n                  opacity: value.done === false ? 1 : 0.5,\n                }}\n              >\n                {/* Displays an avatar. Maybe we can replace this with an icon later,\n                depending on what they categorize the task as? */}\n                <ListItemAvatar>\n                  <Avatar\n                    alt={`Avatar nÂ°${value + 1}`}\n                    src={`/static/images/avatar/${value + 1}.jpg`}\n                  />\n                </ListItemAvatar>\n\n                {/* This would be a great place to display the date and time of list entry creation. \n                It may be referenced `value.creationTime` after implementation. */}\n                <Chip\n                  label=\"6/17/21 1:29 AM\"\n                  color=\"secondary\"\n                  style={{ marginRight: \"1rem\", width: \"auto\" }}\n                />\n\n                {/* Displays name (title) of task. */}\n                <ListItemText id={labelId} primary={value.title} />\n\n                {/* Checkbox components; shows task status. */}\n                <ListItemIcon>\n                  <Checkbox\n                    //edge=\"end\"\n                    onChange={handleToggle(value)}\n                    checked={checked.indexOf(value) !== -1}\n                    inputProps={{ \"aria-labelledby\": labelId }}\n                  />\n                </ListItemIcon>\n                <Button> onClick={() => { FormDialog.setOpen(true) }}\n                  <EditIcon/>\n                </Button>\n              </ListItem>\n            );\n            // End of list entry display ^\n          })}\n        </List>\n      </Paper>\n    );\n  };\n\n  return (\n    <ThemeProvider theme={customTheme}>\n      <div className={classes.root}>\n        <AppBar style={{ background: \"white\" }} position=\"static\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"secondary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"action tabs example\"\n          >\n            <Tab\n              style={{\n                backgroundColor: \"#264653\",\n                fontWeight: \"bold\",\n                fontSize: \"3rem\",\n              }}\n              label=\"NOW\"\n              {...a11yProps(0)}\n            ></Tab>\n\n            {/* So these allow there to be multiple tabs in this grid box.\n            Try uncommenting below. It's pretty cool! ð As it adds more complexity,\n            we probably shouldn't worry about doing anything with it right now. */}\n\n            {/* <Tab\n              style={{\n                backgroundColor: \"#264653\",\n                fontWeight: \"bold\",\n                fontSize: \"3rem\",\n              }}\n              label=\"SOON\"\n              {...a11yProps(1)}\n            />\n            <Tab\n              style={{\n                backgroundColor: \"#264653\",\n                fontWeight: \"bold\",\n                fontSize: \"3rem\",\n              }}\n              label=\"LATER\"\n              {...a11yProps(2)}\n            /> */}\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n          index={value}\n          onChangeIndex={handleChangeIndex}\n        >\n          <TabPanel\n            value={value}\n            index={0}\n            dir={theme.direction}\n            style={{ backgroundColor: \"#264653\", width: \"100%\" }}\n          >\n            {/* Contents of tab 1. */}\n            <Paper\n              style={{\n                backgroundColor: \"red\",\n                width: \"100%\",\n                margin: 0,\n                padding: 0,\n              }}\n            >\n              {CheckboxListSecondary()}\n            </Paper>\n          </TabPanel>\n          <TabPanel value={value} index={1} dir={theme.direction}>\n            {/* Contents of tab 2. */}\n            Item Two\n          </TabPanel>\n          <TabPanel value={value} index={2} dir={theme.direction}>\n            {/* Contents of tab 3. */}\n            Item Three\n          </TabPanel>\n        </SwipeableViews>\n\n        {/* Fab component stuff below. */}\n        {fabs.map((fab, index) => (\n          <Zoom\n            key={fab.color}\n            in={value === index}\n            timeout={transitionDuration}\n            style={{\n              transitionDelay: `${\n                value === index ? transitionDuration.exit : 0\n              }ms`,\n            }}\n            unmountOnExit\n          >\n            <Fab\n              aria-label={fab.label}\n              className={fab.className}\n              color={fab.color}\n              onClick={() => {\n                // We should use this to implement adding new to-do entries!\n                console.log(\"onClick\");\n              }}\n            >\n              {fab.icon}\n            </Fab>\n          </Zoom>\n        ))}\n      </div>\n    </ThemeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}